name: Deployment

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'

jobs:
  run_pull:
    name: run pull
    runs-on: ubuntu-latest

    env:
      DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
      DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
      DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
      DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
      DATABASE_USER: ${{ secrets.DATABASE_USER }}
      ISSUER: ${{ secrets.ISSUER }}
      APP_PRIVATE_KEY: ${{ secrets.APP_PRIVATE_KEY }}
      APP_PUBLIC_KEY: ${{ secrets.APP_PUBLIC_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure .env
        run: |
          echo "DATABASE_HOST=${{ secrets.DATABASE_HOST }}" > .env
          echo "DATABASE_NAME=${{ secrets.DATABASE_NAME }}" >> .env
          echo "DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}" >> .env
          echo "DATABASE_PORT=${{ secrets.DATABASE_PORT }}" >> .env
          echo "DATABASE_USER=${{ secrets.DATABASE_USER }}" >> .env
          echo "ISSUER=${{ secrets.ISSUER }}" >> .env

      - name: Create RSA Keys
        run: |
          echo "${{ secrets.APP_PRIVATE_KEY }}" > src/main/resources/app.key
          chmod 600 src/main/resources/app.key
          echo "${{ secrets.APP_PUBLIC_KEY }}" > src/main/resources/app.pub

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker Permissions
        run: sudo chmod 666 /var/run/docker.sock

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker Compose Run Build
        run: |
          docker compose up --build -d
          docker tag ecommerce-api-image:latest wesley00s/ecommerce-spring-api:v3
          docker push wesley00s/ecommerce-spring-api:v3